#!/usr/bin/env bash

#strings can be with or without speech marks
echo Hello world!
echo 'Hello world'
echo "Hello world"

# Commands can also be on the same line separated by a semicolon
echo This is the first line; echo This is the second line

# Variables
STRING_VARIABLE="My Variable"
INT_VARIABLE=1

# To print them out
echo STRING_VARIABLE INT_VARIABLE
echo "$STRING_VARIABLE $INT_VARIABLE"

# This will not print it out
echo '$STRING_VARIABLE $INT_VARIABLE'

# Parameter expansion
echo ${STRING_VARIABLE} ${INT_VARIABLE}

# Substring replacement (same as C# "string".Replace("old", "new"))
# string/substring_to_replace/replacement_string
echo ${STRING_VARIABLE/My/Your}

# Substrings
# Just take the "Variab" part of the string
echo ${STRING_VARIABLE:3:6}
# get the last 8 characters
echo ${STRING_VARIABLE: -8}

# Print out the string length
echo The length of \"$STRING_VARIABLE\" is ${#STRING_VARIABLE}

# Indirect expansion
OTHER_VAR="STRING_VARIABLE"
echo ${!OTHER_VAR}
# this won't work
OTHER_VAR2="not_a_var"
echo ${!OTHER_VAR2}

# Default values for variables
DEFAULT_VAR="new string"
echo ${DEFAULT_VAR:-"some default string"} # this will output "new string"
DEFAULT_VAR= # set the variable as null (can also set as empty string "")
echo ${DEFAULT_VAR:-"some default string"} # this will output "some default string" because the variable has no value

# Arrays
MY_ARRAY=(one two three four five)

# Print the first element of it
echo $MY_ARRAY
# Can also specify the index
echo ${MY_ARRAY[1]}
# Print out all of them
echo ${MY_ARRAY[@]}
# Print the length of the array
echo ${#MY_ARRAY[@]}
# How many characters in a specific element
echo ${#MY_ARRAY[2]}
# Print certain elements
echo ${MY_ARRAY[@]:1:3}
# Print certain characters of a specific element
echo ${MY_ARRAY[3]:1:2}
# Print every one on a new line
for element in "${MY_ARRAY[@]}"; do
    echo $element
done

# Brace expansion - used to generate arbitrary strings
echo {1..10}
echo {a..z}
# Can also replace a for-loop implementing string replacements as well. This will output a1b a2b a3b
echo a{1,2,3}b
